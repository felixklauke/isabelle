plugins {

    id 'java'
}

group 'de.d3adspace.isabelle'
version '1.0-SNAPSHOT'

allprojects {

    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'jacoco'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {

        /**
         * Resolving local maven repository.
         */
        mavenLocal()

        /**
         * Maven central repository.
         */
        mavenCentral()
    }

    dependencies {

        /**
         * JUnit Jupiter as a testing framework.
         */
        testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.2.0'

        /**
         * JUnit Jupiter parameter configuration.
         */
        testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.2.0'

        /**
         * JUnit Jupiter testing engine.
         */
        testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.2.0'

        /**
         * Vintage platform engine.
         */
        testCompile group: 'org.junit.platform', name: 'junit-platform-engine', version: '1.2.0'

        /**
         * JUnit jupiter with mockito.
         */
        testCompile group: 'org.mockito', name: 'mockito-junit-jupiter', version: '2.19.0'

        /**
         * Mockito for mocking.
         */
        testCompile group: 'org.mockito', name: 'mockito-core', version: '2.19.0'
    }

    test {

        useJUnitPlatform()
    }
}

task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    // Add all relevant sourcesets from the subprojects
    subprojects.each {
        sourceSets it.sourceSets.main
    }

    reports {
        xml.enabled = true
        xml.setDestination(new File("${buildDir}/reports/jacoco/report.xml"))
        html.setEnabled(true)
        html.setDestination(new File("${buildDir}/reports/jacoco/report.html"))
    }

    dependencies {
        subprojects {
            test
        }
    }
}